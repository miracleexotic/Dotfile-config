- name: "zsh]-[Install require library"
  shell: pacman -S bat tree btop zsh
  register: result

- include_tasks: ../Essential/fzf/install.yaml

- name: "zsh]-[Get zsh path"
  shell: which zsh
  args:
    executable: /bin/bash
  register: zsh
- name: "----"
  debug:
    msg: "Executable: {{ zsh.stdout }}"

- name: "zsh]-[Change user shell to zsh"
  user:
    name: "{{ user }}"
    shell: "{{ zsh.stdout }}"
  register: result
- name: "zsh]-[Verify shell"
  shell: echo $SHELL
  args:
    chdir: /home/{{ user }}
  register: result
- name: "----"
  debug:
    msg: "SHELL: {{ result.stdout }}"

- name: "zsh]-[Verify zplug"
  stat:
    path: /home/{{ user }}/.zplug
  register: result
- name: "zsh]-[Install zplug"
  become_user: "{{ user }}"
  shell: export ZPLUG_HOME=/home/{{ user }}/.zplug && git clone https://github.com/zplug/zplug $ZPLUG_HOME && source $ZPLUG_HOME/init.zsh
  args:
    chdir: /home/{{ user }}
    executable: "{{ zsh.stdout }}"
  when: not result.stat.exists
  register: result
- name: "----"
  debug:
    var: result

- include_tasks: ../Prog-lang/Rust/install.yaml

- name: "zsh]-[Verify exa"
  shell: echo $(which exa)
  args:
    executable: "{{ zsh.stdout }}"
  register: result
- name: "zsh]-[Install exa via cargo"
  become_user: "{{ user }}"
  shell: cargo install exa
  args:
    executable: "{{ zsh.stdout }}"
  when: result.stdout.find('not found') != -1
  register: result
- name: "----"
  debug:
    var: result

- name: "zsh]-[Verify enhancd"
  stat:
    path: /home/{{ user }}/enhancd
  register: result
- name: "zsh]-[Git Clone - enhancd"
  become_user: "{{ user }}"
  git:
    repo: "https://github.com/b4b4r07/enhancd"
    dest: "/home/{{ user }}/enhancd"
  when: not result.stat.exists
  register: result
- name: "----"
  debug:
    var: result

- name: "zsh]-[source enhancd"
  shell: source /home/{{ user }}/enhancd/init.sh
  args:
    chdir: /home/{{ user }}
    executable: "{{ zsh.stdout }}"
  register: result

- name: "zsh]-[Link .zshrc file"
  shell: ln -sf /home/{{ user }}/Dotfile-config/zsh/.zshrc /home/{{ user }}/.zshrc
  args:
    chdir: /home/{{ user }}
    executable: "{{ zsh.stdout }}"
  register: result
